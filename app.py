import os
import random
import streamlit as st
from PIL import Image

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
IMAGE_FOLDER = "images"
ALLOWED_EXT = (".png", ".jpg", ".jpeg", ".gif")

# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
def normalize_name(name: str) -> str:
    """–ü—Ä–∏–≤–æ–¥–∏–º –∏–º—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —Å—É—Ñ—Ñ–∏–∫—Å '_card'."""
    name = name.lower().replace(" ", "").replace("_", "")
    if name.endswith("card"):
        name = name[:-4]
    return name

def split_original_name(name: str) -> list[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏ —Å—É—Ñ—Ñ–∏–∫—Å–∞ _card."""
    clean_name = name.rsplit(".", 1)[0].replace("_card", "")
    return clean_name.split("_")

def get_random_image():
    files = [f for f in os.listdir(IMAGE_FOLDER) if f.lower().endswith(ALLOWED_EXT)]
    return random.choice(files) if files else None

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø ===
if "current_image" not in st.session_state:
    st.session_state.current_image = None
if "attempts" not in st.session_state:
    st.session_state.attempts = 3
if "hints" not in st.session_state:
    st.session_state.hints = []
if "result" not in st.session_state:
    st.session_state.result = ""

# === –§–£–ù–ö–¶–ò–Ø –ù–û–í–û–ì–û –†–ê–£–ù–î–ê ===
def start_new_round():
    st.session_state.current_image = get_random_image()
    st.session_state.attempts = 3
    st.session_state.hints = []
    st.session_state.result = ""

# === –ü–ï–†–í–´–ô –ó–ê–ü–£–°–ö ===
if st.session_state.current_image is None:
    start_new_round()

# === –ò–ù–¢–ï–†–§–ï–ô–° ===
st.title("üé¥ –£–≥–∞–¥–∞–π –∫–∞—Ä—Ç—É")
st.write(f"–ü–æ–ø—ã—Ç–æ–∫ –æ—Å—Ç–∞–ª–æ—Å—å: **{st.session_state.attempts}**")

if st.session_state.current_image:
    image_path = os.path.join(IMAGE_FOLDER, st.session_state.current_image)
    img = Image.open(image_path)
    st.image(img, caption="–í–∞—à–∞ –∫–∞—Ä—Ç–∞", use_container_width=True)

# === –í–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞ ===
if st.session_state.result == "":
    guess = st.text_input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã", key="guess_input")
    if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å"):
        if guess.strip():
            correct_answer = st.session_state.current_image.rsplit(".", 1)[0]
            if normalize_name(guess) == normalize_name(correct_answer):
                st.session_state.result = "‚úÖ –í–µ—Ä–Ω–æ!"
            else:
                # —É–º–µ–Ω—å—à–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏
                st.session_state.attempts -= 1
                words = split_original_name(correct_answer)

                if st.session_state.attempts == 2:
                    st.session_state.hints.append(f"–ü–æ–¥—Å–∫–∞–∑–∫–∞: –∫–∞—Ä—Ç–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ {len(words)} —Å–ª–æ–≤.")
                elif st.session_state.attempts == 1:
                    initials = " ".join(w[0].upper() for w in words)
                    st.session_state.hints.append(f"–ü–æ–¥—Å–∫–∞–∑–∫–∞: –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã —Å–ª–æ–≤ ‚Äî {initials}")

                if st.session_state.attempts == 0:
                    st.session_state.result = f"‚ùå –ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}"
        st.experimental_rerun()

# === –ü–û–î–°–ö–ê–ó–ö–ò ===
if st.session_state.hints:
    st.subheader("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:")
    for hint in st.session_state.hints:
        st.info(hint)

# === –†–ï–ó–£–õ–¨–¢–ê–¢ –ò –ö–ù–û–ü–ö–ê –ù–û–í–û–ô –ò–ì–†–´ ===
if st.session_state.result:
    st.subheader(st.session_state.result)
    if st.button("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
        start_new_round()
        st.experimental_rerun()
