import os
import random
import streamlit as st
import pandas as pd
from PIL import Image

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
IMAGE_FOLDER = "images"
ALLOWED_EXT = (".png", ".jpg", ".jpeg", ".gif")
CSV_FILE = "div_cards_clean.csv"

# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
def normalize_name(name: str) -> str:
    name = name.lower().replace(" ", "").replace("_", "")
    if name.endswith("card"):
        name = name[:-4]
    return name

def split_original_name(name: str) -> list[str]:
    clean_name = name.rsplit(".", 1)[0].replace("_card", "")
    return clean_name.split("_")

def get_random_image():
    files = [f for f in os.listdir(IMAGE_FOLDER) if f.lower().endswith(ALLOWED_EXT)]
    return random.choice(files) if files else None

def get_random_card_from_csv(df):
    return df.sample(1).iloc[0]

def generate_options(df, correct_name, num_options=4):
    """–°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å 1 –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏ (num_options-1) —Å–ª—É—á–∞–π–Ω—ã—Ö –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö."""
    all_names = df["name"].tolist()
    wrong_names = random.sample([n for n in all_names if n != correct_name], num_options - 1)
    options = wrong_names + [correct_name]
    random.shuffle(options)
    return options

# === –ó–ê–ì–†–£–ó–ö–ê CSV ===
df_cards = pd.read_csv(CSV_FILE)

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø ===
if "mode" not in st.session_state:
    st.session_state.mode = "–ü–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ"
if "current_card" not in st.session_state:
    st.session_state.current_card = None
if "options" not in st.session_state:
    st.session_state.options = []
if "result" not in st.session_state:
    st.session_state.result = ""

# === –§–£–ù–ö–¶–ò–Ø –ù–û–í–û–ì–û –†–ê–£–ù–î–ê ===
def start_new_round():
    st.session_state.result = ""
    st.session_state.current_card = None
    st.session_state.options = []

    if st.session_state.mode == "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä":
        # –ë–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É
        card = get_random_card_from_csv(df_cards)
        st.session_state.current_card = card
        # –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
        st.session_state.options = generate_options(df_cards, card["name"], 4)

# === –í–´–ë–û–† –†–ï–ñ–ò–ú–ê ===
st.title("üé¥ –£–≥–∞–¥–∞–π –∫–∞—Ä—Ç—É")
mode = st.radio(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:",
    ["–ü–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ", "–ü–æ –æ–ø–∏—Å–∞–Ω–∏—é", "–õ—ë–≥–∫–∏–π —Ä–µ–∂–∏–º", "–°–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∂–∏–º", "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä"],
    key="mode_select"
)
if st.session_state.mode != mode:
    st.session_state.mode = mode
    start_new_round()

# === –ò–ù–¢–ï–†–§–ï–ô–° –†–ï–ñ–ò–ú–ê –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–û–ì–û –í–´–ë–û–†–ê ===
if st.session_state.mode == "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä":
    if st.session_state.current_card is None:
        start_new_round()

    card = st.session_state.current_card
    st.subheader("–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã:")
    st.info(card["description"])

    if st.session_state.result == "":
        # –ö–Ω–æ–ø–∫–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        for option in st.session_state.options:
            if st.button(option):
                if option == card["name"]:
                    st.session_state.result = "‚úÖ –í–µ—Ä–Ω–æ!"
                else:
                    st.session_state.result = f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {card['name']}"
                st.rerun()
    else:
        st.subheader(st.session_state.result)
        if st.button("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
            start_new_round()
            st.rerun()

# === –î–õ–Ø –î–†–£–ì–ò–• –†–ï–ñ–ò–ú–û–í (–°–¢–ê–†–ê–Ø –õ–û–ì–ò–ö–ê) ===
elif st.session_state.mode != "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä":
    st.info("–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ä–µ–∂–∏–º –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –∏–ª–∏ –ª—ë–≥–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞.")
